name: CI

on:
  push:
    branches: [ main, "feature/**" ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml

      - name: Install deps from requirements/pyproject (if present)
        if: ${{ hashFiles('requirements*.txt') != '' || hashFiles('pyproject.toml') != '' }}
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install .; fi
          pip install pytest pytest-cov

      - name: Install minimal test deps (fallback)
        if: ${{ !(hashFiles('requirements*.txt') != '' || hashFiles('pyproject.toml') != '') }}
        run: |
          python -m pip install -U pip
          pip install pytest pytest-cov pandas numpy scikit-learn

      - name: Run tests
        run: |
          pytest -ra --maxfail=1 --cov=. --cov-report=xml --junitxml=pytest-junit.xml

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.python-version }}
          path: |
            pytest-junit.xml
            coverage.xml
